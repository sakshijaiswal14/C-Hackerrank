#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

class Person{
  protected:
      char name[101];
    int age;
  public:
    virtual void putdata() = 0;
    virtual void getdata() = 0;
};

class Professor: public Person{
  private:
    static int id;
    int cur_id;
    int publications;
  public:
    Professor() {cur_id = ++id;};
    void putdata(){
        cout << name << " " << age << " " << publications << " " << cur_id << "\n";
    }
    void getdata(){
        cin >> name >> age >> publications;
    }
};

int Professor::id = 0;

class Student: public Person{
    static int id;
    int cur_id;
    int marks[6];

    int summarks() {
        int sum = marks[0];
        for (int i = 1; i<6; i++)
            sum += marks[i];
        return sum;
    }

  public:
    Student() {cur_id = ++id;};
    void putdata(){
        cout << name << " " << age << " " << summarks() << " " << cur_id << "\n";
    }
    void getdata(){
        cin >> name >> age;
        for (int i = 0; i<6; i++)
            cin >> marks[i] ;
    }
};

int Student::id = 0;

int main(){

    int n, val;
    cin>>n; //The number of objects that is going to be created.
    Person *per[n];

    for(int i = 0;i < n;i++){

        cin>>val;
        if(val == 1){
            // If val is 1 current object is of type Professor
            per[i] = new Professor;

        }
        else per[i] = new Student; // Else the current object is of type Student

        per[i]->getdata(); // Get the data from the user.

    }

    for(int i=0;i<n;i++)
        per[i]->putdata(); // Print the required output for each object.

    return 0;

}
